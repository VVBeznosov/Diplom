#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытий
// Код процедур и функций

Процедура ОбработкаПроведения(Отказ,Режим)

	Если Договор.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание Тогда
		Сообщить("Необходим действующий договор абонентского обслуживания!");
		Возврат;
	КонецЕсли;
	Если ДатаРабот < Договор.ВКМ_НачалоДоговора ИЛИ ДатаРабот > Договор.ВКМ_КонецДоговора Тогда
		Сообщить("На указанную дату нет действующего договора абонентского обслуживания!");
		Возврат;		
	КонецЕсли;
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;

	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = ДатаРабот;
	Движение.Договор = Договор;
	Движение.Клиент = Клиент;
	Движение.КоличествоЧасов = ТЧВыполненныеРаботы.Итог("ЧасыКОплате");
	Движение.СуммаКОплате = Договор.ВКМ_Почасовка * ТЧВыполненныеРаботы.Итог("ЧасыКОплате");


	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	// регистр ВКМ_ВыполненныеКлиентуРаботы
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций

#КонецОбласти

#Область Инициализация

#КонецОбласти