
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//++ВКМ Изменение формы
	ВКМ_ИзменитьФорму();
	//--ВКМ
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ВКМ_ИзмененияФормы
//Изменения и добавление элементов формы

&НаСервере
Процедура ВКМ_ИзменитьФорму()
	
	НоваяКоманда = Команды.Добавить("КомандаЗаполнитьАбонПлата");
	НоваяКоманда.Действие = "ВКМ_ЗаполнитьАбонПлата";
	НоваяКоманда.Заголовок = "Заполнить";
	
	НовыйЭлемент = Элементы.Добавить("КнопкаЗаполнить", Тип("КнопкаФормы"), КоманднаяПанель);
	НовыйЭлемент.ИмяКоманды = "КомандаЗаполнитьАбонПлата";
	
КонецПроцедуры

&НаКлиенте
Процедура ВКМ_ЗаполнитьАбонПлата(Команда)
	
	Текст = "";
	Если Не ЗначениеЗаполнено(Объект.Договор) Тогда
		Текст = "Не выбран договор!";
	ИначеЕсли Не ВКМ_АбонДоговор(Объект.Договор) Тогда
		Текст = "Только для договоров абонентского обслуживания!";
	КонецЕсли;
	
	Если Текст <> "" Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Текст;
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;

	ВКМ_ВыполнитьАвтозаполнение();
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаУслуги;
	
КонецПроцедуры

&НаСервере
Процедура ВКМ_ВыполнитьАвтозаполнение()
	
	АбонПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	Почасовка = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если Не ЗначениеЗаполнено(АбонПлата) Или
			Не ЗначениеЗаполнено(Почасовка) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнены значения констант!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Объект.Товары.Очистить();
	Объект.Услуги.Очистить();
	
	РабочийДоговор = Объект.Договор.ПолучитьОбъект();
	СуммаАбон = РабочийДоговор.ВКМ_Абонплата;
	
	Если СуммаАбон <> 0 Тогда
		НоваяСтрокаУслуги = Объект.Услуги.Добавить();
		НоваяСтрокаУслуги.Номенклатура = АбонПлата;
		НоваяСтрокаУслуги.Количество = 1;
		НоваяСтрокаУслуги.Цена = СуммаАбон;
		НоваяСтрокаУслуги.Сумма = СуммаАбон;

	КонецЕсли;

	ВКМ_ПроведенныеРаботы(Месяц(Объект.Дата), Объект.Контрагент, Объект.Договор, Почасовка);
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма"); 
	
КонецПроцедуры

&НаСервере
Процедура ВКМ_ПроведенныеРаботы(Период, Клиент, Договор, Почасовка)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВКМ_ВыполненныеКлиентуРаботы.КоличествоЧасов), 0) КАК КоличествоЧасов,
		|	ЕСТЬNULL(СУММА(ВКМ_ВыполненныеКлиентуРаботы.СуммаКОплате), 0) КАК СуммаКОплате
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы КАК ВКМ_ВыполненныеКлиентуРаботы
		|ГДЕ
		|	МЕСЯЦ(ВКМ_ВыполненныеКлиентуРаботы.Период) = &Период
		|	И ВКМ_ВыполненныеКлиентуРаботы.Клиент = &Клиент
		|	И ВКМ_ВыполненныеКлиентуРаботы.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.УстановитьПараметр("Договор", Договор);	
	
//	РезультатЗапроса = Запрос.Выполнить();
//	 
//	Если РезультатЗапроса.Пустой() Тогда
//		Возврат;
//	КонецЕсли;
	 
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И Выборка.КоличествоЧасов > 0 И Выборка.СуммаКОплате > 0 Тогда
		НоваяСтрокаУслуги = Объект.Услуги.Добавить();
		НоваяСтрокаУслуги.Номенклатура = Почасовка;
		НоваяСтрокаУслуги.Количество = Выборка.КоличествоЧасов;
		НоваяСтрокаУслуги.Цена = Выборка.СуммаКОплате/Выборка.КоличествоЧасов;
		НоваяСтрокаУслуги.Сумма = Выборка.СуммаКОплате;		
	КонецЕсли;;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
КонецПроцедуры

&НаСервере
Функция ВКМ_АбонДоговор(Договор)
	Возврат Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание
КонецФункции

//ВКМ_ИзмененияФормы
#КонецОбласти


#КонецОбласти
